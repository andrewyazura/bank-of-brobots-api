"""Initial structure

Revision ID: ab940370fa85
Revises: 
Create Date: 2021-12-22 20:54:24.698744

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ab940370fa85'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('external_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=True),
    sa.Column('email', sa.String(length=32), nullable=True),
    sa.Column('public_name', sa.String(length=32), nullable=True),
    sa.Column('description', sa.String(length=280), nullable=True),
    sa.Column('ip_whitelist', postgresql.ARRAY(postgresql.INET()), nullable=True),
    sa.Column('permissions', postgresql.ARRAY(postgresql.ENUM('ExternalApplications', 'Transactions', name='endpointpermissions')), nullable=True),
    sa.Column('token_hash', sa.String(length=128), nullable=True),
    sa.Column('status', postgresql.ENUM('Active', 'Deleted', 'Restricted', name='externalapplicationstatus'), nullable=True),
    sa.Column('token_generated_on', sa.DateTime(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_external_applications_token_hash'), 'external_applications', ['token_hash'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('Active', 'Restricted', name='userstatus'), nullable=True),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=16), nullable=True),
    sa.Column('last_name', sa.String(length=16), nullable=True),
    sa.Column('username', sa.String(length=16), nullable=True),
    sa.Column('photo_url', sa.String(length=128), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('accounts',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('money', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', postgresql.ENUM('Created', 'WaitingConfirmation', 'Done', 'Rejected', name='transactionstatus'), nullable=True),
    sa.Column('from_account', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('to_account', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.Column('application', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['application'], ['external_applications.id'], ),
    sa.ForeignKeyConstraint(['from_account'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['to_account'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_external_applications_token_hash'), table_name='external_applications')
    op.drop_table('external_applications')
    # ### end Alembic commands ###
    op.execute('DROP TYPE userstatus')
    op.execute('DROP TYPE transactionstatus')
    op.execute('DROP TYPE endpointpermissions')
    op.execute('DROP TYPE externalapplicationstatus')
