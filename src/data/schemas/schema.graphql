type User {
  id: ID!
  isAdmin: Boolean
  name: String!
  telegram_id: String!
  money: Int
  weekLimit: Int
  weekLeft: Int
  planCost: Int
  planName: String
  transactions: [Transaction]
}

type Transaction {
  id: ID!
  fromUser: User!
  toUser: User!
  money: Int!
  message: String
}

type Subscription {
  id: Int!
  name: String!
  cost: Int
  limit: Int
}

type Query {
  user(id: ID!): User!
  users: [User]

  transactions: [Transaction]

  subscriptions: [Subscription]
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User!
  transfer(
    from_user_id: ID!
    to_user_id: ID!
    money: Int!
    message: String
  ): Transaction!

  addMoney(userId: ID!, money: Int, message: String): Boolean

  changeSubscription(subscriptionId: Int, userId: ID!): Subscription
}
